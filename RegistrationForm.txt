Вы можете использовать HTML формы для сбора информации от людей, которые посещают вашу веб-страницу.

В этом курсе вы изучите HTML формы, создав страницу для регистрации. Вы узнаете, как управлять типами данных, которые люди могут вводить в вашу форму, и некоторые новые инструменты CSS для стилизования вашей страницы.



Шаг 1
Добро пожаловать в проект Регистрационная Форма! Начните добавлять !DOCTYPE html декларация в верхней части документа, чтобы браузер знал, какой тип документа он читает.



Шаг 2
Под DOCTYPE добавьте html-элемент с атрибутом lang, установленным на en, так что у вас есть место для начала.



Шаг З
Далее, добавьте открывающиеся и закрывающиеся теги head и body внутри элемента html.



Шаг 4
Добавить заголовок и мета-элемент внутри элемента head. Дайте вашему проекту заголовок Registration Form, и добавьте атрибут charset с значением utf-8 к вашему мету-элементу.



Шаг 5
Вложить элемент link в элемент head. Дать ему атрибут rel с значением stylesheet и атрибут href с значением styles.css.



Шаг 6
Внутри body, обеспечить контекст заголовка для контента, добавив h1 с текстом Registration Form.



Шаг 7
Под заголовком использовать следующий текст в элементе абзаца для поощрения пользователей к регистрации:

Пример кода

Please fill out this form with the required information



Шаг 8
Единица vh обозначает высоту окна и равна 1% от высоты окна. Таким образом, она соответствует высоте окна.

Настало время приукрасить проект CSS. Начните с того, что вы дадите body width 100%, а height 100vh.



Шаг 9
Теперь, избавьтесь от горизонтальной прокрутки, установив на 0 значение поля по умолчанию, добавленное некоторыми браузерами.



Шаг 10
Это лучше. Теперь, сделайте фон удобным для глаз, изменив цвет фона body на #1b1b32. Затем, чтобы увидеть текст, измените color на #f5f6f7.



Шаг 11
Как предполагает название, вы создаете форму. Итак, после элемента р, вставьте элемент формы с атрибутом action, ориентирующимся на https://register-demo.freecodecamp.org.



Шаг 12
Атрибут метода указывает, как отправлять данные формы в URL, указанный в атрибуте action. Данные формы могут быть отправлены через запрос GET как параметры URL (с method="get") или через запрос POST как данные в теле запроса (с method="post").

Установите атрибут метода для отправки данных формы через запрос POST.



Шаг 13
Поскольку форма будет иметь три отдельных раздела, добавьте три элемента fieldset внутри элемента формы.



Шаг 14
Первый fieldset будет содержать поля имени, электронной почты и пароля. Начните с добавления четырех элементов label в первый fieldset.



Шаг 15
Добавить следующий текст в элементы label:

Enter Your First Name:
Enter Your Last Name:
Enter Your Email:
Create a New Password:



Шаг 16Passed
Единица rem означает root em и относится к размеру шрифта элемента html.

Поскольку элементы label по умолчанию встроены, они все отображаются рядом друг с другом на одной строке, что делает их текст трудным для чтения. Чтобы они появились на отдельных линиях, добавьте display: block к элементу label и добавьте margin 0.5rem 0, чтобы отделить их друг от друга.



Шаг 17
Вложить элемент input в каждую label. Обязательно добавьте каждый input после текста label, и включите пробел после двоеточий.



Шаг 18
Следуя передовым методам обеспечения доступности, связывайте элементы input и элементы label вместе с помощью атрибута for.

Использовать first-name, last-name, email, и new-password  в качестве значений для соответствующих атрибутов id.



Шаг 19
Указание атрибута type элемента input важно для браузера, чтобы он знал, с какими данными должен ожидать. Если type не указан, то браузер по умолчанию будет использовать text.

Дайте первым двум элементам input атрибут type text, третьему атрибуту type email и четвёртому атрибуту type password.

Тип email позволяет отправлять электронную почту только с @ и . в домене. Тип password скрывает ввод, и предупреждает, если сайт не использует HTTPS.



Шаг 20
Первый элемент input с типом submit автоматически устанавливается для отправки ближайшего родительского элемента form.

Для обработки отправки формы после последнего элемента fieldset добавьте элемент input с атрибутом type, установленным для submit, и атрибутом value, установленным для Submit.



Шаг 21
На этом этапе вы должны быть в состоянии отправить форму. Однако, вы можете заметить, что много не происходит.

Чтобы сделать форму более интерактивной, добавьте атрибут required к элементам input в первом наборе полей.

Теперь, если вы попробуете отправить форму без заполнения требуемых полей, вы увидите сообщение об ошибке.



Шаг 22
Некоторые значения атрибутов type приходят с встроенной проверкой формы. Например, type="email" требует, чтобы значение было действительным адресом электронной почты.

Добавьте пользовательскую проверку элемента input password, добавив атрибут minlength с значением 8. При этом будет предотвращаться отправка вводов менее 8 символов.



Шаг 23
При помощи  type="password" вы можете использовать атрибут pattern для определения регулярного выражения, которое должно соответствовать паролю, чтобы считаться действительным.

Добавить атрибут pattern в элемент ввода пароля, чтобы запросить соответствие: [a-z0-5]{8,}

Приведенное выше - регулярное выражение, которое соответствует восьми или более строчным буквам или цифрам от 0 до 5. Затем удалите атрибут minlength и попробуйте его.



Шаг 24
Перейдем к следующей части формы регистрации. В этом разделе будет задан тип учетной записи, которую открывает пользователь.

Начните с добавления двух элементов label ко второму набору fieldset.



Шаг 25
Пользователям будет позволено выбрать либо Personal или Business.

Чтобы сделать это, в каждом из первых двух элементов label добавьте один элемент input с type="radio".



Шаг 26
Внутри каждого соответствующего элемента label, сразу после элемента input, добавьте пробел и добавьте следующий текст:

Пример кода

Personal 
Business



Шаг 27
Вы хотите, чтобы только один radio-input был выбран одновременно. Однако форма не знает, что input radio связаны.

Чтобы соотнести input radio, дайте им один и тот же атрибут name сo значением account-type. Теперь невозможно одновременно выбрать оба радио-входа.



Шаг 28
В настоящее время пользователи могут отправлять форму без проверки radio input. Хотя ранее вы использовали атрибут required, чтобы указать, что требуется ввод, в этом случае он не будет работать, потому что добавление обязательного к обоим вводам передаст неверную информацию пользователям.

Чтобы решить эту проблему, вы можете предоставить контекст того, что требуется, добавив элемент legend с текстом Account type (required) перед элементами label вo втором наборе fieldset. Затем добавьте атрибут checked в Personal input, чтобы убедиться, что форма отправляется с требуемыми данными.



Шаг 29
Следовать передовым методам обеспечения доступности, соединяя элементы input и элементы label во втором наборе полей.

Использовать personal-account и business-account в качестве значений для соответствующих атрибутов id.



Шаг 30
Вы должны подтвердить, что пользователь прочитал условия.

Добавить элемент label. Внутри нового элемента label добавьте элемент input и установите атрибут type в checkbox. Сделать этот элемент input required, так что пользователи не могут подписаться без согласия с условиями.

Добавить id и for атрибуты со значением с terms-and-conditions к элементам для доступности.



Шаг 31
Добавить текст I accept the terms and conditions сразу после элемента input в недавно добавленной label. Затем связывайте текст условий и условий со следующим местом:

Пример кода

https://www.freecodecamp.org/news/terms-of-service/



Шаг 32
Переходим к последнему набору. Что если вы хотите разрешить пользователю загружать профиль?

Что ж, input типа file позволяет именно это. Добавьте label с текстом Upload a profile picture: и вложить в input, принимающий загрузку файла.



Шаг 33
Добавьте еще одну label после первой, с текстом Input your age (years): . Затем, вложить input с типом number.

Далее, добавьте атрибут min сo значением 13, потому что пользователи младше 13 лет не должны регистрироваться. Также пользователи, вероятно, не будут старше 120 лет; добавьте атрибут max сo значением 120.

Теперь, если кто-то пытается отправить форму сo значениями вне диапазона, появится предупреждение, и форма не будет отправлена. Попробуйте.



Шаг 34
Добавление выпадающего списка к форме легко с помощью элемента select. Элемент select - это контейнер для группы элементов option, и элемент option действует как label для каждого выпадающего параметра. Оба элемента требуют закрывающих тегов.

Начните с добавления элемента select под последним элементом label. Затем вложить 5 элементов option в элемент select.



Шаг 35
Помещайте элемент select (с его элементами option) в элемент label с текстом How did you hear about us?. Текст должен быть перед элементом select.



Шаг 36
В данный момент выпадающие параметры пусты. Чтобы дать им содержимое, добавьте следующий текст к каждому последующему элементу option:

Пример кода

(select one)
freeCodeCamp News
freeCodeCamp YouTube Channel
freeCodeCamp Forum
Other



Шаг 37
Отправка формы с выбранной option не посылает полезное значение на сервер. Таким образом, каждому варианту необходимо дать атрибут value. Без этого текстовое содержание option будет отправлено на сервер.

Дать первому варианту value "", а последующим элементам option value от 1 до 4.



Шаг 38
Элемент textarea действует как элемент input типа text, но с дополнительным преимуществом, что он может получать многострочный текст и начальное количество текстовых строк и колонок.

Пользователи смогут зарегистрироваться с биографией. Добавьте label с текстом Provide a bio: в конце fieldset. Добавить элемент textarea внутри элемента label. Обратите внимание, что textarea требует закрывающего тега.



Шаг 39
Связать соответствующие элементы формы и их элементы label вместе.

Использовать profile-picture, age, referrer и bio в качестве value для соответствующих атрибутов for и id.



Шаг 40
Текст в textarea кажется слишком маленьким. Чтобы дать ему начальный размер, вы можете добавить атрибуты rows и cols.

Добавить начальный размер З строки и 30 колонок.



Шаг 41
Для того чтобы дать туристам представление о том, что вносить в их биографию, используется атрибут placeholder. placeholder принимает текстовое значение, которое отображается до тех пор, пока пользователь не начнет вводить.

Дайте textarea placeholder I like coding on the beach... .



Шаг 42
При представлении форм полезно, а также рекомендуется, чтобы каждый подлежащий представлению элемент имел атрибут name. Этот атрибут используется для идентификации элемента в представлении формы.

За исключением двух radio (которые вы уже назвали), дайте каждому представленному элементу уникальный атрибут name по вашему выбору.



Шаг 43
HTML для регистрационного бланка завершен. Теперь вы можете немного приукрасить его.

Начните добавляя шрифт Tahoma с размером 16 пикселей в поле body.



Шаг 44
Центрировать элементы h1 и p, давая им margin 1em auto. Затем выровняйте их текст в центр.



Шаг 45
Центрировать элемент формы, давая ему margin 0 авто. Затем устанавливать его размер на максимальную ширину 500px, и минимальную ширину 300px. Между этим диапазоном, позвольте ему иметь ширину 60vw.



Шаг 46
Во время разработки полезно видеть границы по умолчанию fieldset. Однако они делают содержимое слишком разделенным.

Уберите border и добавьте 2rem padding только в верхнюю и нижнюю части каждого набора fieldset. Не забудьте удалить padding слева и справа.



Шаг 47
Чтобы придать элементам fieldset немного разделения, выделите их и дайте им обрамление 3px solid #3b3b4f.



Шаг 48
Граница последнего элемента fieldset выглядит немного неуместно. Вы можете выбрать последний элемент определенного типа, используя псевдокласс last-of-type CSS-типа, вот так:

Пример кода

p:last-of-type { }

Это будет отображать последний элемент p. Создайте новый селектор, который нацеливается на последний элемент fieldset и устанавливает его border-bottom на none.



Шаг 49
Было бы лучше, если бы текст label появился над элементами формы.

Выберите все элементы input, textarea и select, и сделайте так, чтобы они занимали всю ширину своих родительских элементов.

Также добавьте 10 пикселей в верхнюю часть выделенных элементов. Установите другие границы на 0.



Шаг 50
Для второго набора fieldset необходимо, чтобы текст input и label были указаны на одной строке.

Начать, дав элементам input во втором поле fieldset класс inline.



Шаг 51
Выберите только .inline элементы, и дайте им width of unset. Это удалит предыдущее правило, которое устанавливало все  элементы input в width: 100%.



Шаг 52
Добавьте некоторое пространство между элементами .inline и текстом label, давая правый margin 0.5em. Также установите все остальные отрезки на 0.