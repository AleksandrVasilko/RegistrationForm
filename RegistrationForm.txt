Вы можете использовать HTML формы для сбора информации от людей, которые посещают вашу веб-страницу.

В этом курсе вы изучите HTML формы, создав страницу для регистрации. Вы узнаете, как управлять типами данных, которые люди могут вводить в вашу форму, и некоторые новые инструменты CSS для стилизования вашей страницы.



Шаг 1
Добро пожаловать в проект Регистрационная Форма! Начните добавлять !DOCTYPE html декларация в верхней части документа, чтобы браузер знал, какой тип документа он читает.



Шаг 2
Под DOCTYPE добавьте html-элемент с атрибутом lang, установленным на en, так что у вас есть место для начала.



Шаг З
Далее, добавьте открывающиеся и закрывающиеся теги head и body внутри элемента html.



Шаг 4
Добавить заголовок и мета-элемент внутри элемента head. Дайте вашему проекту заголовок Registration Form, и добавьте атрибут charset с значением utf-8 к вашему мету-элементу.



Шаг 5
Вложить элемент link в элемент head. Дать ему атрибут rel с значением stylesheet и атрибут href с значением styles.css.



Шаг 6
Внутри body, обеспечить контекст заголовка для контента, добавив h1 с текстом Registration Form.



Шаг 7
Под заголовком использовать следующий текст в элементе абзаца для поощрения пользователей к регистрации:

Пример кода

Please fill out this form with the required information



Шаг 8
Единица vh обозначает высоту окна и равна 1% от высоты окна. Таким образом, она соответствует высоте окна.

Настало время приукрасить проект CSS. Начните с того, что вы дадите body width 100%, а height 100vh.



Шаг 9
Теперь, избавьтесь от горизонтальной прокрутки, установив на 0 значение поля по умолчанию, добавленное некоторыми браузерами.



Шаг 10
Это лучше. Теперь, сделайте фон удобным для глаз, изменив цвет фона body на #1b1b32. Затем, чтобы увидеть текст, измените color на #f5f6f7.



Шаг 11
Как предполагает название, вы создаете форму. Итак, после элемента р, вставьте элемент формы с атрибутом action, ориентирующимся на https://register-demo.freecodecamp.org.



Шаг 12
Атрибут метода указывает, как отправлять данные формы в URL, указанный в атрибуте action. Данные формы могут быть отправлены через запрос GET как параметры URL (с method="get") или через запрос POST как данные в теле запроса (с method="post").

Установите атрибут метода для отправки данных формы через запрос POST.



Шаг 13
Поскольку форма будет иметь три отдельных раздела, добавьте три элемента fieldset внутри элемента формы.



Шаг 14
Первый fieldset будет содержать поля имени, электронной почты и пароля. Начните с добавления четырех элементов label в первый fieldset.



Шаг 15
Добавить следующий текст в элементы label:

Enter Your First Name:
Enter Your Last Name:
Enter Your Email:
Create a New Password:



Шаг 16Passed
Единица rem означает root em и относится к размеру шрифта элемента html.

Поскольку элементы label по умолчанию встроены, они все отображаются рядом друг с другом на одной строке, что делает их текст трудным для чтения. Чтобы они появились на отдельных линиях, добавьте display: block к элементу label и добавьте margin 0.5rem 0, чтобы отделить их друг от друга.



Шаг 17
Вложить элемент input в каждую label. Обязательно добавьте каждый input после текста label, и включите пробел после двоеточий.



Шаг 18
Следуя передовым методам обеспечения доступности, связывайте элементы input и элементы label вместе с помощью атрибута for.

Использовать first-name, last-name, email, и new-password  в качестве значений для соответствующих атрибутов id.



Шаг 19
Указание атрибута type элемента input важно для браузера, чтобы он знал, с какими данными должен ожидать. Если type не указан, то браузер по умолчанию будет использовать text.

Дайте первым двум элементам input атрибут type text, третьему атрибуту type email и четвёртому атрибуту type password.

Тип email позволяет отправлять электронную почту только с @ и . в домене. Тип password скрывает ввод, и предупреждает, если сайт не использует HTTPS.



Шаг 20
Первый элемент input с типом submit автоматически устанавливается для отправки ближайшего родительского элемента form.

Для обработки отправки формы после последнего элемента fieldset добавьте элемент input с атрибутом type, установленным для submit, и атрибутом value, установленным для Submit.



Шаг 21
На этом этапе вы должны быть в состоянии отправить форму. Однако, вы можете заметить, что много не происходит.

Чтобы сделать форму более интерактивной, добавьте атрибут required к элементам input в первом наборе полей.

Теперь, если вы попробуете отправить форму без заполнения требуемых полей, вы увидите сообщение об ошибке.



Шаг 22
Некоторые значения атрибутов type приходят с встроенной проверкой формы. Например, type="email" требует, чтобы значение было действительным адресом электронной почты.

Добавьте пользовательскую проверку элемента input password, добавив атрибут minlength с значением 8. При этом будет предотвращаться отправка вводов менее 8 символов.



Шаг 23
При помощи  type="password" вы можете использовать атрибут pattern для определения регулярного выражения, которое должно соответствовать паролю, чтобы считаться действительным.

Добавить атрибут pattern в элемент ввода пароля, чтобы запросить соответствие: [a-z0-5]{8,}

Приведенное выше - регулярное выражение, которое соответствует восьми или более строчным буквам или цифрам от 0 до 5. Затем удалите атрибут minlength и попробуйте его.



Шаг 24
Перейдем к следующей части формы регистрации. В этом разделе будет задан тип учетной записи, которую открывает пользователь.

Начните с добавления двух элементов label ко второму набору fieldset.



Шаг 25
Пользователям будет позволено выбрать либо Personal или Business.

Чтобы сделать это, в каждом из первых двух элементов label добавьте один элемент input с type="radio".



Шаг 26
Внутри каждого соответствующего элемента label, сразу после элемента input, добавьте пробел и добавьте следующий текст:

Пример кода

Personal 
Business